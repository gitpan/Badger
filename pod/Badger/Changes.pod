=head1 NAME

Badger::Changes - Summary of changes in the Badger toolkit

=head1 CHANGES

This document contains a brief overview of what has changed between 
successive version of the Badger toolkit.

Mr T is our badger mascot.  He no longer pities the fool that uses Badger
in a production system.  Which is a roundabout way of saying that Badger
is now stable, reliable, and unlikely to change significantly in future
versions.  

Badger is already being deployed in commercial production systems that I've
built and I wouldn't be doing that if I wasn't 99.9% certain of its
suitability and fitness for purpose. There are no guarantees of course, but it
may help you to sleep at night knowing that I have a heavily vested interest
in keeping the Badger fit and healthy.

=head2 Version 0.06

Added L<copy_file()|Badger::Filesystem/copy_file()> and
L<move_file()|Badger::Filesystem/move_file()> to L<Badger::Filesystem> and
L<copy()|Badger::Filesystem/copy()> and L<move()|Badger::Filesystem/move()>
methods to L<Badger::Filesystem::File>.

Added L<chmod_path()|Badger::Filesystem/chmod_path()> to L<Badger::Filesystem>
and L<chmod()|Badger::Filesystem::Path/chmod()> to L<Badger::Filesystem::Path>.

Added L<Bin()|Badger::Filesystem/Bin()> to L<Badger::Filesystem>.

Added the L<encoding()|Badger::Filesystem::File/encoding()> method to 
L<Badger::Filesystem::File> for specifying the encoding of a file, along
with the L<utf8()|Badger::Filesystem::File/utf8()>,
L<bytes()|Badger::Filesystem::File/bytes()>,
L<crlf()|Badger::Filesystem::File/crlf()> and 
L<raw()|Badger::Filesystem::File/raw()> methods for enabling different 
encoding layers.

Added the L<codec()|Badger::Filesystem::File/codec()> method to 
L<Badger::Filesystem::File> for specifying a serialisation codec to use in 
conjunction with the new  L<data()|Badger::Filesystem::File/data()> method.

Added L<Badger::Timestamp>. This is returned by the new
L<created()|Badger::Filesystem::Path/created()>,
L<accessed()|Badger::Filesystem::Path/accessed()> and
L<modified()|Badger::Filesystem::Path/modified()> methods in
L<Badger::Filesystem::Path>.

Added L<Badger::Logic>.

Added L<Badger::Log> and L<Badger::Log::File>.

Added L<numlike()|Badger::Utils/numlike()> to L<Badger::Utils>
as an alias for C<looks_like_number>.  It's the numerical counterpart
to L<textlike()|Badger::Utils/textlike()> and is significantly easier
to type.

Added L<debug_msg()|Badger::Base/debug_msg()> to L<Badger::Base>. Also added
the C<Badger::Base::Trial> class definition for use with the
L<try()|Badger::Base/try()> method.

Added L<lib|Badger/lib> import hook to L<Badger>.

Added L<bclass|Badger::Class/bclass> as an alias for
L<class|Badger::Class/class> in L<Badger::Class>.

Changed L<Badger::Class::Config> to maintain the order of configuration
parameters where possible (i.e. when expressed as a list ref rather than
a hash ref).  Also added C<target:var> fallback which looks in the target
object or hash ref for the variable.  This allows options to default to 
the values set by preceeding options.

Changed L<Badger::Codec::JSON> to use L<JSON::XS> if available.

Mr T is now using Badger 0.06 in production code and is happy to report that
everything seems to be working rather well.  Anyone for a game of tennis?

=head2 Version 0.05 - 23rd December 2008

Refactored L<Badger::Factory>.

Added support to L<Badger::Exporter> for the C<=> pseudo-sigil which can be
used to create constants on the fly.

    package Badger::Example;
    use Badger::Class
        exports => {
            tags => {
                math => {
                    e   => '=2.718',
                    pi  => '=3.142',
                    phi => '=1.618',
                },
            }
        };
    
    package main;
    use Badger::Example ':math';
    
    print e;            # 2.718
    print pi;           # 3.142
    print phi;          # 1.618

Mr T is starting to feel rather confident about building a production system
based on Badger v0.05.

=head2 Version 0.04 - 2nd December 2008

Added the L<throw_msg()|Badger::Base/throw_msg()> method to L<Badger::Base>.

Added L<init_method|Badger::Class/init_method> hook to L<Badger::Class> and 
L<initialiaser()|Badger::Class/initialiaser()> to L<Badger::Class::Methods>.

Changed L<Badger::Exception> L<match_type()|Badger::Exception/match_type()>
method to accept a list or hash reference, or a string of whitespace delimited 
exception types.

Changed L<Badger::Factory> to pass C<$name> as an argument to various methods.
Also passes arguments to load() (required for Template::TT2::Plugins)
Also modified L<item()|Badger::Factory/item()> to accept a non-textlike 
type argument which bypasses the module lookup.

Moved a whole bunch of stuff out of L<Badger::Class> into C<Badger::Class::*>
modules.

Added L<Badger::Class::Config> for simple configuration.

Added L<hash()|Badger::Methods/hash()> method to L<Badger::Methods> and 
L<hash_methods|Badger::Class|hash_methods> hook to L<Badger::Class>.

Added L<trace()|Badger::Exception/trace> hook and related paraphernalia to
L<Badger::Exception>. Added the C<-t> / C<--trace> command line options to
L<Badger::Test> to enable it when running tests.  Also added C<-h> / C<--help>
options.

Added L<Codec()|Badger::Codecs/Codec()> exportable subroutine to 
L<Badger::Codecs>.

Added L<Badger::Codec::URL>.  It's similar to L<Badger::Codec::URI>,
but slightly different.  See the TT uri/url filters for the reason.

Changed the L<prototype()|Badger::Prototype/prototype()> method in
L<Badger::Prototype> to accept a single C<undef> value to clear any current
prototype. Also added the L<has_prototype()|Badger::Prototype/has_prototype()>
method.

Mr T is looking on the bright side about the possibility of building a 
production system based on Badger v0.04, but still advises caution.

=head2 Version 0.03 - 7th October 2008

Added delegate loaders to L<Badger>.  This provides some semantic sugar
for loading a bunch of different C<Badger::*> modules in one go.

    use Badger
        Filesystem  => 'FS $Bin',
        Codecs      => 'storable base64',
        Debug       => {
            modules => 'My::Module',
        };

Added L<different()|Badger::Test::Manager/different()> to 
L<Badger::Test::Manager>.

Added L<textlike()|Badger::Utils/textlike()> to L<Badger::Utils>

Added the L<overload|Badger::Class/overload>
L<as_text|Badger::Class/as_text> and 
L<is_true|Badger::Class/is_true> import hooks and related method to
L<Badger::Class>.  These delegate to the C<overload> module.

Added the L<print|Badger::Filesystem::File/print()> method to 
L<Badger::Filesystem::File>.

Added support for 
L<dynamic root directories|Badger::Filesystem::Virtual/"virtual root directories">
to L<Badger::Filesystem::Virtual>.

Added the L<defaults|Badger::Class/defaults> and L<aliases|Badger::Class/aliases>
hooks to L<Badger::Class>, implemented by L<Badger::Class::Defaults> and 
L<Badger::Class::Aliases>, respectively.  There are still experimental.

Fixed up some stat handling in L<Badger::Filesystem> to help with subclassing
in L<Badger::Filesystem::Virtual>

Mr T pities the fool that attempts to builds a production system based on
Badger version 0.03 without first evaluating it carefully and reading the
documentation.

=head2 Version 0.02 - 6th September 2008

L<Badger::Class> got the L<vars|Badger::Class/vars()> method and hook
for declaring and defining variables.

L<Badger::Utils> gained the ability to load and export functions from 
L<Scalar::Util>, L<List::Util>, L<List::MoreUtils>, L<Hash::Util> and
L<Digest::MD5>.

Various documentation updates.

Mr T admires the tenacity of anyone attempting to build a production system
based on Badger v0.02 and hopes they have a thorough test suite.

=head2 Version 0.01 - 27th August 2008

This was the first release version. 

Mr T pities the fool who builds a production system based on Badger v0.01.

=head1 AUTHOR

Andy Wardley  E<lt>abw@wardley.orgE<gt>

=head1 COPYRIGHT

Copyright (C) 2008-2009 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut
